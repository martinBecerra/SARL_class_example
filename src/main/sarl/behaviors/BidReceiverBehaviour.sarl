/** 
 * 
 */
package behaviors

import events.AuctionFinished
import events.Bid
import events.BidBaseChanged
import events.StartAuction
import io.sarl.core.Destroy
import io.sarl.core.Initialize
import io.sarl.core.Logging
import spaces.AuctionSpace

/** 
 * @author martin
 * 
 */
behavior BidReceiverBehaviour {
	uses Logging
	
	var auctionSpace    : AuctionSpace
	var isAuctionOpened : boolean
	
	on Initialize {
		isAuctionOpened = false
	}

	on StartAuction {
		synchronized (this) {
			this.isAuctionOpened = true
		}
	} 
	
	on Bid [isAuctionOpened == true] {
		
		synchronized (this) {
			val agentId = occurrence.source.UUID
			val bidValue = occurrence.value
			this.auctionSpace.verifyBid(agentId, bidValue)
		}
		
	}

	on BidBaseChanged { // logging purposes
		
		synchronized (this) {
			val baseValue = occurrence.value
			info("Base Bid changed to " + baseValue)
		}
		
	}

	on AuctionFinished {
		
		synchronized (this) {
			this.isAuctionOpened = false
			this.auctionSpace.closeAuction()
		}
	}


	on Destroy {
		
	}
	
	public def configure(auctionSpace : AuctionSpace) {
		this.auctionSpace = auctionSpace 
	}
}
